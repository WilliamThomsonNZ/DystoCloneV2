"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/index",{

/***/ "./merkleTree/index.js":
/*!*****************************!*\
  !*** ./merkleTree/index.js ***!
  \*****************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"verifyOnWl\": function() { return /* binding */ verifyOnWl; }\n/* harmony export */ });\nvar MerkleTree = (__webpack_require__(/*! merkletreejs */ \"./node_modules/merkletreejs/dist/index.js\").MerkleTree);\nvar keccak256 = __webpack_require__(/*! keccak256 */ \"./node_modules/keccak256/dist/keccak256.js\");\n//TODO: Replace this with a data base where we can pull from. Set up the backend api. \nfunction verifyOnWl(_address) {\n    var WLAddresses = [\n        \"0x847d08e9Ab33C256E22180b5fc055b0828B8020f\",\n        \"0x847d08e9Ab33C256E22180b5fc055b084865020f\",\n        \"0x847d08e9Ab33C256E22180b5fc055b080656020f\",\n        \"0x847d08e9Ab33C256E22180b5fc055b012312020f\",\n        \"0x847d08e9Ab33C256E22180b5fc055b080123020f\",\n        \"0x847d08e9Ab33C256E22180b5fc055b080821020f\",\n        \"0x847d08e9Ab33C256E22180b5fc055b080812220f\",\n        \"0x70997970C51812dc3A010C7d01b50e0d17dc79C8\",\n        \"0x847d08e9Ab33C256E22180b5fc055b0808B8020f\",\n        \"0x9dD79A7b6B9c8DfCA1c056CF5Eaf399C8848E28B\", \n    ];\n    var leaves = WLAddresses.map(function(addr) {\n        return keccak256(addr);\n    });\n    var tree = new MerkleTree(leaves, keccak256);\n    var root = tree.getRoot().toString(\"hex\");\n    var leaf = keccak256(_address);\n    var proof = tree.getHexProof(leaf);\n    return {\n        proof: proof,\n        root: root\n    };\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9tZXJrbGVUcmVlL2luZGV4LmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSxHQUFLLENBQUdBLFVBQVUsR0FBS0MsaUdBQUw7QUFDbEIsR0FBSyxDQUFDQyxTQUFTLEdBQUdELG1CQUFPLENBQUMsNkRBQVc7QUFFckMsRUFBc0Y7QUFDL0UsU0FBU0UsVUFBVSxDQUFDQyxRQUFRLEVBQUMsQ0FBQztJQUNqQyxHQUFLLENBQUNDLFdBQVcsR0FBRyxDQUFDO1FBQ2pCLENBQTRDO1FBQzVDLENBQTRDO1FBQzVDLENBQTRDO1FBQzVDLENBQTRDO1FBQzVDLENBQTRDO1FBQzVDLENBQTRDO1FBQzVDLENBQTRDO1FBQzVDLENBQTRDO1FBQzVDLENBQTRDO1FBQzVDLENBQTRDO0lBRWhELENBQUM7SUFDRCxHQUFLLENBQUNDLE1BQU0sR0FBR0QsV0FBVyxDQUFDRSxHQUFHLENBQUNDLFFBQVFOLENBQVJNLElBQUk7UUFBSU4sTUFBTSxDQUFOQSxTQUFTLENBQUNNLElBQUk7O0lBQ3JELEdBQUssQ0FBQ0MsSUFBSSxHQUFHLEdBQUcsQ0FBQ1QsVUFBVSxDQUFDTSxNQUFNLEVBQUVKLFNBQVM7SUFDN0MsR0FBSyxDQUFDUSxJQUFJLEdBQUdELElBQUksQ0FBQ0UsT0FBTyxHQUFHQyxRQUFRLENBQUMsQ0FBSztJQUMxQyxHQUFLLENBQUNDLElBQUksR0FBR1gsU0FBUyxDQUFDRSxRQUFRO0lBQy9CLEdBQUssQ0FBQ1UsS0FBSyxHQUFHTCxJQUFJLENBQUNNLFdBQVcsQ0FBQ0YsSUFBSTtJQUNuQyxNQUFNLENBQUMsQ0FBQ0M7UUFBQUEsS0FBSyxFQUFMQSxLQUFLO1FBQUVKLElBQUksRUFBSkEsSUFBSTtJQUFBLENBQUM7QUFDeEIsQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9tZXJrbGVUcmVlL2luZGV4LmpzPzhhOTMiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgeyBNZXJrbGVUcmVlIH0gPSByZXF1aXJlKCdtZXJrbGV0cmVlanMnKVxuY29uc3Qga2VjY2FrMjU2ID0gcmVxdWlyZSgna2VjY2FrMjU2JylcblxuLy9UT0RPOiBSZXBsYWNlIHRoaXMgd2l0aCBhIGRhdGEgYmFzZSB3aGVyZSB3ZSBjYW4gcHVsbCBmcm9tLiBTZXQgdXAgdGhlIGJhY2tlbmQgYXBpLiBcbmV4cG9ydCBmdW5jdGlvbiB2ZXJpZnlPbldsKF9hZGRyZXNzKXtcbiAgICBjb25zdCBXTEFkZHJlc3NlcyA9IFtcbiAgICAgICAgXCIweDg0N2QwOGU5QWIzM0MyNTZFMjIxODBiNWZjMDU1YjA4MjhCODAyMGZcIixcbiAgICAgICAgXCIweDg0N2QwOGU5QWIzM0MyNTZFMjIxODBiNWZjMDU1YjA4NDg2NTAyMGZcIixcbiAgICAgICAgXCIweDg0N2QwOGU5QWIzM0MyNTZFMjIxODBiNWZjMDU1YjA4MDY1NjAyMGZcIixcbiAgICAgICAgXCIweDg0N2QwOGU5QWIzM0MyNTZFMjIxODBiNWZjMDU1YjAxMjMxMjAyMGZcIixcbiAgICAgICAgXCIweDg0N2QwOGU5QWIzM0MyNTZFMjIxODBiNWZjMDU1YjA4MDEyMzAyMGZcIixcbiAgICAgICAgXCIweDg0N2QwOGU5QWIzM0MyNTZFMjIxODBiNWZjMDU1YjA4MDgyMTAyMGZcIixcbiAgICAgICAgXCIweDg0N2QwOGU5QWIzM0MyNTZFMjIxODBiNWZjMDU1YjA4MDgxMjIyMGZcIixcbiAgICAgICAgXCIweDcwOTk3OTcwQzUxODEyZGMzQTAxMEM3ZDAxYjUwZTBkMTdkYzc5QzhcIixcbiAgICAgICAgXCIweDg0N2QwOGU5QWIzM0MyNTZFMjIxODBiNWZjMDU1YjA4MDhCODAyMGZcIixcbiAgICAgICAgXCIweDlkRDc5QTdiNkI5YzhEZkNBMWMwNTZDRjVFYWYzOTlDODg0OEUyOEJcIixcblxuICAgIF1cbiAgICBjb25zdCBsZWF2ZXMgPSBXTEFkZHJlc3Nlcy5tYXAoYWRkciA9PiBrZWNjYWsyNTYoYWRkcikpO1xuICAgIGNvbnN0IHRyZWUgPSBuZXcgTWVya2xlVHJlZShsZWF2ZXMsIGtlY2NhazI1Nik7XG4gICAgY29uc3Qgcm9vdCA9IHRyZWUuZ2V0Um9vdCgpLnRvU3RyaW5nKFwiaGV4XCIpO1xuICAgIGNvbnN0IGxlYWYgPSBrZWNjYWsyNTYoX2FkZHJlc3MpO1xuICAgIGNvbnN0IHByb29mID0gdHJlZS5nZXRIZXhQcm9vZihsZWFmKVxuICAgIHJldHVybiB7cHJvb2YsIHJvb3R9O1xufVxuIl0sIm5hbWVzIjpbIk1lcmtsZVRyZWUiLCJyZXF1aXJlIiwia2VjY2FrMjU2IiwidmVyaWZ5T25XbCIsIl9hZGRyZXNzIiwiV0xBZGRyZXNzZXMiLCJsZWF2ZXMiLCJtYXAiLCJhZGRyIiwidHJlZSIsInJvb3QiLCJnZXRSb290IiwidG9TdHJpbmciLCJsZWFmIiwicHJvb2YiLCJnZXRIZXhQcm9vZiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./merkleTree/index.js\n");

/***/ })

});